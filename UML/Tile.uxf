<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>553</x>
      <y>721</y>
      <w>154</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>*Tile*
--
-nType: sideType
-eType: sideType
-sType: sideType
-wType: sideType
-preyType: PreyType
-roadsConnect: bool
-citiesConnect: bool
--
Tile(n, s, e, w, center, hasPennant)
rotate()
rotate(int rotations)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>623</x>
      <y>644</y>
      <w>21</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>553</x>
      <y>539</y>
      <w>147</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>*TileRelation*
--
-tile: *Tile
-landmarks: vector&lt;Landmark*&gt;
-nTile: *TileRelation
-eTile: *TileRelation
-sTile: *TileRelation
-wTile: *TileRelation
--
getters()
setters()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>553</x>
      <y>364</y>
      <w>147</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>*Board*
--
-deck: TileDeck
-tiles: TileRelation*[153][153]
-landmarks: TileLandmark*[153][153][9]
-startTile: TileRelation*
--
Board() // Place 1st tile &amp; init board
isPlacementValid(int x, int y, Tile* tile)
placeTile(int x, int y, Tile* tile)
static getLowestZone(x, y, TileLandmark*)
-placeLandmarks(int x, int y, Tile* tile)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>623</x>
      <y>490</y>
      <w>21</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>427</x>
      <y>651</y>
      <w>217</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;290.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>623</x>
      <y>287</y>
      <w>21</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>917</x>
      <y>679</y>
      <w>147</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>*TileLake*
{friend Lake}
--
nLake: TileLake*
eLake: TileLake*
sLake: TileLake*
wLake: TileLake*
bool sidesConnect
bool hasCrocodile</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1071</x>
      <y>679</y>
      <w>147</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>*TileDen*
{friend Den}
--
vector&lt;Tile*&gt; surroundingTiles;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>763</x>
      <y>679</y>
      <w>147</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>*TileTrail*
{friend Trail}
--
nextTrail: TileTrail*
prevTrail: TileTrail*
bool trailEnds
bool hasCrocodile
--
appendTo(TileTrail*)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>623</x>
      <y>490</y>
      <w>385</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;530.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>917</x>
      <y>525</y>
      <w>147</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Virtual&gt;&gt;
/TileLandmark/
{friend Landmark}
--
tigerOwnedBy: Player*
tigerCount: int
landmark: Landmark*
hasCrocodile: bool
--
static createTileLandmark(LandmarkType)
virtual bool append(TileLandmark*)
virtual bool isComplete()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>833</x>
      <y>644</y>
      <w>175</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>987</x>
      <y>644</y>
      <w>21</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>987</x>
      <y>644</y>
      <w>182</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>126</x>
      <y>287</y>
      <w>518</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=2..n</panel_attributes>
    <additional_attributes>10.0;120.0;720.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1190</x>
      <y>273</y>
      <w>147</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Virtual&gt;&gt;
/Landmark/
--
vector&lt;TileLandmark*&gt;
--
virtual bool isComplete()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1344</x>
      <y>406</y>
      <w>147</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>*Den*
--
--
bool isComplete()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1190</x>
      <y>406</y>
      <w>147</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>*Lake*
--
--
bool isComplete()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1036</x>
      <y>406</y>
      <w>147</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>*Trail*
--
--
bool isComplete()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1099</x>
      <y>364</y>
      <w>175</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1253</x>
      <y>364</y>
      <w>182</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1253</x>
      <y>364</y>
      <w>21</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>994</x>
      <y>364</y>
      <w>280</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
m1=n..1</panel_attributes>
    <additional_attributes>10.0;230.0;30.0;40.0;380.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>448</x>
      <y>455</y>
      <w>98</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>Board has a lot of
business logic, so
we might need a
BoardController.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>28</x>
      <y>371</y>
      <w>238</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Virtual&gt;&gt;
*Player*
--
-tigerCount: int
-crocodileCount: int
-score: int
#Board: TileRelation***
--
+Player(TileRelation***)
+incrementScore(int): int
+getScore(): int
+virtual TakeTurn(Tile*) const = 0 : MoveEntity</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>63</x>
      <y>511</y>
      <w>98</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>147</x>
      <y>511</y>
      <w>105</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>574</y>
      <w>147</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>*AIPlayer*
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>161</x>
      <y>574</y>
      <w>147</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>*NetworkPlayer*
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>105</x>
      <y>707</y>
      <w>231</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>*MoveEntity*
--
+forfeit: bool
+tile: Tile*
+numOfTileRelations: int
+x_coord: int
+y_coord: int
+crocodile: bool
+tigerZone: int //if = -1, then no tiger was placed
--
+MoveEntity() //Forfeit Constructor
+MoveEntity(Tile*, int, int, int, bool, int)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>490</x>
      <y>161</y>
      <w>273</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>*Game*
--
-Deck: TileDeck
-board: Board*
-players: Player*[2]
-turnIndex: int
--
+GameController(Player*, Player*)
+startGame(): void
-endGame(): void // Choose winner, call end game scoring
-endGame(int): void //int is the index of the forfeiting player
-scoreGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>357</x>
      <y>525</y>
      <w>147</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>*TileDeck*
--
-Deck: Stack(*Tile)
--
+drawTile()
+static defineTiles()
+Deck(int size)
+size(): int //number of remaining tiles
-shuffle()
-static createTileFromTemplate()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>427</x>
      <y>287</y>
      <w>217</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>290.0;10.0;10.0;340.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1015</x>
      <y>252</y>
      <w>189</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>*EndGame*
--
scoreBoard(Board*)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>819</x>
      <y>238</y>
      <w>189</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>*PlayTurn*
--
isPlacementValid(int x, int y, Tile*)
placeTile(int x, int y, Tile*)
rotateTile(Tile*)
rotateTile(Tile*, int)
-placeLandmarks(int x, int y, Tile*)
placeTiger(int x, int y, int zone, Player*)
placeCrocodile(int x, int y, Player*)

-append(TileLandmark*, TileLandmark*)
static createTileLandmark(LandmarkType)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>819</x>
      <y>112</y>
      <w>189</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>*ScoreTurn*
--
isComplete(TileLandmark*)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1050</x>
      <y>126</y>
      <w>189</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>*StartGame*
--
shuffleDeck(TileDeck*)
// init Players
// init Board
// init TileDeck</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
