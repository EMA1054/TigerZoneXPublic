<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>410</x>
      <y>460</y>
      <w>110</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>*Tile*
--
-nType: sideType
-eType: sideType
-sType: sideType
-wType: sideType
-preyType: PreyType
-roadsConnect: bool
-citiesConnect: bool
--
Tile(n, s, e, w, center, hasPennant)
rotate()
rotate(int rotations)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>550</x>
      <y>640</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>*object: Tile*
(type H)
--
n: sideType="farm"
s: sideType="farm"
e: sideType="city"
w: sideType="city"
center: centerType="farm"
hasPennant: bool=false</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>575</y>
      <w>155</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;290.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>285</x>
      <y>640</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>*object: Tile*
(type A)
--
n: sideType="farm"
s: sideType="road"
e: sideType="farm"
w: sideType="farm"
center: centerType="cloister"
hasPennant: bool=false</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>325</x>
      <y>575</y>
      <w>150</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>280.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>415</x>
      <y>640</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>*object: Tile*
(type F)
--
n: sideType="farm"
s: sideType="farm"
e: sideType="city"
w: sideType="city"
center: centerType="city"
hasPennant: bool=true</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>575</y>
      <w>55</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>405</y>
      <w>15</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>410</x>
      <y>330</y>
      <w>105</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>*TileRelation*
--
-tile: *Tile
-landmarks: vector&lt;Landmark*&gt;
-nTile: *TileRelation
-eTile: *TileRelation
-sTile: *TileRelation
-wTile: *TileRelation
--
getters()
setters()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>410</x>
      <y>205</y>
      <w>105</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>*Board*
--
-deck: TileDeck
-tiles: TileRelation*[145][145]
-landmarks: TileLandmark*[145][145][9]
-startTile: TileRelation*
--
Board() // Place 1st tile &amp; init board
isPlacementValid(int x, int y, Tile* tile)
placeTile(int x, int y, Tile* tile)
static getLowestZone(x, y, TileLandmark*)
-placeLandmarks(int x, int y, Tile* tile)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>295</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>410</y>
      <w>155</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;290.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>130</y>
      <w>15</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>670</x>
      <y>430</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>*TileLake*
{friend Lake}
--
nLake: TileLake*
eLake: TileLake*
sLake: TileLake*
wLake: TileLake*
bool sidesConnect
bool hasCrocodile</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>780</x>
      <y>430</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>*TileDen*
{friend Den}
--
vector&lt;Tile*&gt; surroundingTiles;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>560</x>
      <y>430</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>*TileTrail*
{friend Trail}
--
nextTrail: TileTrail*
prevTrail: TileTrail*
bool trailEnds
bool hasCrocodile
--
appendTo(TileTrail*)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>295</y>
      <w>275</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;530.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>670</x>
      <y>335</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Virtual&gt;&gt;
/TileLandmark/
{friend Landmark}
--
tigerOwnedBy: Player*
landmark: Landmark*
--
static createTileLandmark(LandmarkType)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>405</y>
      <w>125</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>405</y>
      <w>15</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>405</y>
      <w>130</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>105</x>
      <y>130</y>
      <w>370</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=2..n</panel_attributes>
    <additional_attributes>10.0;160.0;720.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>865</x>
      <y>140</y>
      <w>105</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Virtual&gt;&gt;
/Landmark/
--
vector&lt;TileLandmark*&gt;
--
virtual bool isComplete()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>975</x>
      <y>235</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>*Den*
--
--
bool isComplete()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>865</x>
      <y>235</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>*Lake*
--
--
bool isComplete()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>755</x>
      <y>235</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>*Trail*
--
--
bool isComplete()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>205</y>
      <w>125</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>910</x>
      <y>205</y>
      <w>130</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>910</x>
      <y>205</y>
      <w>15</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>725</x>
      <y>205</y>
      <w>200</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
m1=n..1</panel_attributes>
    <additional_attributes>10.0;260.0;30.0;40.0;380.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>335</x>
      <y>270</y>
      <w>70</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Board has a lot of
business logic, so
we might need a
BoardController.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>35</x>
      <y>210</y>
      <w>170</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Virtual&gt;&gt;
*Player*
--
-tigerCount: int
-crocodileCount: int
-score: int
#Board: TileRelation***
--
+Player(TileRelation***)
+incrementScore(int): int
+getScore(): int
+virtual TakeTurn(Tile*) const = 0 : MoveEntity</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>60</x>
      <y>310</y>
      <w>70</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>120</x>
      <y>310</y>
      <w>75</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>15</x>
      <y>355</y>
      <w>105</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>*AIPlayer*
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>130</x>
      <y>355</y>
      <w>105</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>*NetworkPlayer*
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>90</x>
      <y>450</y>
      <w>165</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>*MoveEntity*
--
+forfeit: bool
+tile: Tile*
+numOfTileRelations: int
+x_coord: int
+y_coord: int
+crocodile: bool
+tigerZone: int //if = -1, then no tiger was placed
--
+MoveEntity() //Forfeit Constructor
+MoveEntity(Tile*, int, int, int, bool, int)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>365</x>
      <y>40</y>
      <w>195</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>*GameController*
--
-Deck: TileDeck
-board: Board*
-players: Player*[2]
-turnIndex: int
--
+GameController(Player*, Player*)
+startGame(): void
-endGame(): void // Choose winner, call end game scoring
-endGame(int): void //int is the index of the forfeiting player
-scoreGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>270</x>
      <y>320</y>
      <w>105</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>*TileDeck*
--
-Deck: Stack(*Tile)
--
+drawTile()
+static defineTiles()
+Deck(int size)
+size(): int //number of remaining tiles
-shuffle()
-static createTileFromTemplate()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>130</y>
      <w>155</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>290.0;10.0;10.0;380.0</additional_attributes>
  </element>
</diagram>
