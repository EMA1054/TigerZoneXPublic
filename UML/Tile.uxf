<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>240</x>
      <y>606</y>
      <w>132</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>*Tile*
--
-nType: sideType
-eType: sideType
-sType: sideType
-wType: sideType
-preyType: PreyType
-roadsConnect: bool
-citiesConnect: bool
--
Tile(n, s, e, w, center, hasPennant)
rotate()
rotate(int rotations)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>408</x>
      <y>822</y>
      <w>126</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*object: Tile*
(type H)
--
n: sideType="farm"
s: sideType="farm"
e: sideType="city"
w: sideType="city"
center: centerType="farm"
hasPennant: bool=false</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>300</x>
      <y>744</y>
      <w>186</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;290.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>90</x>
      <y>822</y>
      <w>126</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*object: Tile*
(type A)
--
n: sideType="farm"
s: sideType="road"
e: sideType="farm"
w: sideType="farm"
center: centerType="cloister"
hasPennant: bool=false</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>138</x>
      <y>744</y>
      <w>180</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>280.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>246</x>
      <y>822</y>
      <w>126</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*object: Tile*
(type F)
--
n: sideType="farm"
s: sideType="farm"
e: sideType="city"
w: sideType="city"
center: centerType="city"
hasPennant: bool=true</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>300</x>
      <y>744</y>
      <w>66</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>300</x>
      <y>540</y>
      <w>18</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>240</x>
      <y>450</y>
      <w>126</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>*TileRelation*
--
-tile: *Tile
-landmarks: vector&lt;Landmark*&gt;
-nTile: *TileRelation
-eTile: *TileRelation
-sTile: *TileRelation
-wTile: *TileRelation
--
getters()
setters()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>240</x>
      <y>300</y>
      <w>126</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>*Board*
--
-deck: TileDeck
-tiles: TileRelation*[145][145]
-landmarks: TileLandmark*[145][145][9]
-startTile: TileRelation*
--
Board() // Place 1st tile &amp; init board
isPlacementValid(int x, int y, Tile* tile)
placeTile(int x, int y, Tile* tile)
static getLowestZone(x, y, TileLandmark*)
-placeLandmarks(int x, int y, Tile* tile)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>438</y>
      <w>126</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>*TileDeck*
--
-Deck: Stack(*Tile)
--
+drawTile()
+static defineTiles()
+Deck(int size)
-shuffle()
-static createTileFromTemplate()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>300</x>
      <y>408</y>
      <w>18</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>132</x>
      <y>546</y>
      <w>186</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;290.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>240</x>
      <y>144</y>
      <w>126</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>*Game*
--
-players: std::vector&lt;Player*&gt;
-board: Board
-turnIndex: int
--
Game(int playerCount) // Call startgame</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>300</x>
      <y>252</y>
      <w>18</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>432</x>
      <y>300</y>
      <w>126</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>*Player*
--
-tigerCount: int
-score: int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>300</x>
      <y>252</y>
      <w>204</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;320.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>552</x>
      <y>570</y>
      <w>126</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*TileLake*
{friend Lake}
--
nLake: TileLake*
eLake: TileLake*
sLake: TileLake*
wLake: TileLake*
bool sidesConnect
bool hasCrocodile</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>684</x>
      <y>570</y>
      <w>126</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*TileDen*
{friend Den}
--
vector&lt;Tile*&gt; surroundingTiles;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>420</x>
      <y>570</y>
      <w>126</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*TileTrail*
{friend Trail}
--
nextTrail: TileTrail*
prevTrail: TileTrail*
bool trailEnds
bool hasCrocodile
--
appendTo(TileTrail*)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>300</x>
      <y>408</y>
      <w>330</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;530.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>552</x>
      <y>456</y>
      <w>126</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Virtual&gt;&gt;
/TileLandmark/
{friend Landmark}
--
tigerOwnedBy: Player*
landmark: Landmark*
--
static createTileLandmark(LandmarkType)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>540</y>
      <w>150</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>612</x>
      <y>540</y>
      <w>18</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>612</x>
      <y>540</y>
      <w>156</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>336</x>
      <y>0</y>
      <w>126</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>*GameController*
--
-game: Game*
--
nextTurn() // Call player turn method &amp; pass tile &amp; board
playTile(x, y, Tile*, Player*)
endTurn() // Return meeples if necessary, and update score
-startGame(int playerCount) // init stuff
-endGame() // Choose winner, call end game scoring
-scoreGame()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>294</x>
      <y>108</y>
      <w>114</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>170.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>390</x>
      <y>108</y>
      <w>126</w>
      <h>204</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=2..n</panel_attributes>
    <additional_attributes>170.0;320.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>786</x>
      <y>222</y>
      <w>126</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Virtual&gt;&gt;
/Landmark/
--
vector&lt;TileLandmark*&gt;
--
virtual bool isComplete()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>918</x>
      <y>336</y>
      <w>126</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*Den*
--
--
bool isComplete()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>786</x>
      <y>336</y>
      <w>126</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*Lake*
--
--
bool isComplete()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>654</x>
      <y>336</y>
      <w>126</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*Trail*
--
--
bool isComplete()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>708</x>
      <y>300</y>
      <w>150</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>300</y>
      <w>156</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>300</y>
      <w>18</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>618</x>
      <y>300</y>
      <w>240</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
m1=n..1</panel_attributes>
    <additional_attributes>10.0;260.0;30.0;40.0;380.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>138</x>
      <y>324</y>
      <w>84</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>Board has a lot of
business logic, so
we might need a
BoardController.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
